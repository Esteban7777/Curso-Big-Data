base_no_ponderada<-length(data$fex_c)
universo_representado<-sum(data$fex_c)
data<-  data %>%
mutate(data, peso=fex_c/universo_representado) %>%
mutate(data,fponderacion=peso*base_no_ponderada)
base_ponderada<-sum(data$fponderacion)
base_no_ponderada
base_ponderada
universo_representado
length(unique(data$fex_c))
length(unique(data$fponderacion))
unidades_muestrales_fex<-length(unique(data$fex_c))
unidades_muestrales_fpon<-length(unique(data$fponderacion))
summarise(
base_no_ponderada,
base_ponderada,
unidades_muestrales_fex,
unidades_muestrales_fpon,
universo_representado
)
summarise(
base_no_ponderada=base_no_ponderada,
base_ponderada=base_ponderada,
unidades_muestrales_fex=length(unique(data$fex_c)),
unidades_muestrales_fpon=length(unique(data$fponderacion)),
universo_representado=universo_representado
)
summarise(
base=base_no_ponderada,
basePonderada=base_ponderada,
unidadesMuestrales_fex=length(unique(data$fex_c)),
unidadesMuestrales_fpon=length(unique(data$fponderacion)),
universoRepresentado=universo_representado
)
print(base_no_ponderada)
tabla<-data.frame(base_no_ponderada,unidades_muestrales_fex)
tabla
base_no_ponderada<-length(data$fex_c)
universo_representado<-sum(data$fex_c)
data<-  data %>%
mutate(data, peso=fex_c/universo_representado) %>%
mutate(data,fponderacion=peso*base_no_ponderada)
base_ponderada<-sum(data$fponderacion)
unidades_muestrales_fex<-length(unique(data$fex_c))
unidades_muestrales_fpon<-length(unique(data$fponderacion))
tabla1<-data.frame(base_no_ponderada,base_ponderada,unidades_muestrales_fex,unidades_muestrales_fpon,universo_representado)
tabla1
tabla1<-t(data.frame(base_no_ponderada,base_ponderada,unidades_muestrales_fex,unidades_muestrales_fpon,universo_representado))
tabla1
tabla1<-t(matrix(base_no_ponderada,base_ponderada,unidades_muestrales_fex,unidades_muestrales_fpon,universo_representado))
tabla1<-t(tibble(base_no_ponderada,base_ponderada,unidades_muestrales_fex,unidades_muestrales_fpon,universo_representado))
tabla1
data_ponderada<-uncount(data,weights = data$fponderacion)
factorPonderacion<-data$fponderacion
data_ponderada<-uncount(data,weights = factorPonderacion
length(data_ponderada)
factorPonderacion<-data$fponderacion
data_ponderada<-uncount(data,weights = factorPonderacion)
data_ponderada<-uncount(data,weights = round(data$fponderacion))
length(data_ponderada$directorio)
base_no_ponderada
base_ponderada
data_ponderada<-uncount(data,weights = round(data$fponderacion,digits = 0))
length(data_ponderada$directorio)
base_no_ponderada
base_ponderada
data_ponderada<-uncount(data,weights = floor(data$fponderacion,digits = 0))
data_ponderada<-uncount(data,weights = floor(data$fponderacion)
length(data_ponderada$directorio)
data_ponderada<-uncount(data,weights = floor(data$fponderacion))
length(data_ponderada$directorio)
base_no_ponderada
base_ponderada
data_ponderada<-uncount(data,weights = trunc(data$fponderacion))
length(data_ponderada$directorio)
base_no_ponderada
base_ponderada
data_ponderada<-uncount(data,weights = round(data$fponderacion))
length(data_ponderada$directorio)
base_no_ponderada
base_ponderada
data_ponderada<-uncount(data,weights = round(data$fponderacion))
base_ponderada<-length(data_ponderada$directorio)
base_ponderada
base_no_ponderada
t1<-Sys.time()
library(gridExtra)
library(rvest)
library(tidyverse)
url_base<-my_url <- "https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_"
tables_list <- list()
for (i in 1:10){
bucle_url<-paste0(url_base, i, ".html")  # Bucle
my_html=read_html(bucle_url)
table<-my_html %>% html_table()
tables_list[[i]] <- table
}
data<-dplyr::bind_rows(tables_list)  # Dataframe
t2<-Sys.time()
Tiempo_ejecucion<-t2-t1
Tiempo_ejecucion
base_no_ponderada<-length(data$fex_c)
universo_representado<-sum(data$fex_c)
data<-  data %>%
mutate(data, peso=fex_c/universo_representado) %>%
mutate(data,fponderacion=peso*base_no_ponderada)
base_ponderada<-sum(data$fponderacion)
unidades_muestrales_fex<-length(unique(data$fex_c))
unidades_muestrales_fpon<-length(unique(data$fponderacion))
tabla1<-t(tibble(base_no_ponderada,base_ponderada,unidades_muestrales_fex,unidades_muestrales_fpon,universo_representado))
tabla1
data_ponderada<-uncount(data,weights = round(data$fponderacion))
base_ponderada<-length(data_ponderada$directorio)
base_ponderada
base_no_ponderada
# Limpieza de mayores de edad: Este chunk lo usamos solo como limpieza de datos
data_ponderada <- data_ponderada %>%
rename(
Edad= age,
Estrato=estrato1,
Ingreso=ingtot,
Educacion=p6210,
Experiencia= p6426,
Salario=p6500,
Sexo=sex,
Horas_trabajadas=totalHoursWorked
)  %>%
mutate(
across(c(cuentaPropia,Estrato,formal,informal,maxEducLevel,oficio,Educacion,Sexo),as.character)
)
### Filtro por poblaci√≥n economica activa
data_ponderada <- data_ponderada %>%
filter(Edad >18 & dsi !="1")
data_ponderada <-data_ponderada %>%
filter(p6240==1)
data_h <- data_ponderada %>%
select(Edad,cuentaPropia,Estrato,formal,informal,Ingreso,maxEducLevel,oficio,Educacion,Experiencia,Salario,Sexo,Horas_trabajadas)
str(data_h)
character_cols <- data_h %>%
select(where(is.character))
character_plots <- map2(character_cols, names(character_cols), ~ ggplot(data_h, aes(x = .x)) +
geom_bar() +
ggtitle(paste("Distribucion", .y)) +
theme_minimal() +
theme(plot.title = element_text(color = "black", hjust = 0)))
character_grid <- grid.arrange(grobs = character_plots, ncol = 2)
numeric_cols <- data_h %>%
select(where(is.numeric))
numeric_plots <- map2(numeric_cols, names(numeric_cols), ~ ggplot(data_h, aes(x = .x)) +
geom_histogram(fill = "skyblue", color = "black", bins = 10) +
ggtitle(paste("Distribucion of", .y)) +  # Set the title to the column name
theme_minimal() +
theme(plot.title = element_text(color = "black", hjust = 0)))
numeric_grid <- grid.arrange(grobs = numeric_plots, ncol = 2)
View(data_h)
table(data_h$informal,data_h$Salario)
cor(data_h$informal,data_h$Salario)
cor(data_h$informal,data_h$Salario,use = "complete.obs")
cor(data_h$informal,data_h$Salario,use = "complete.obs")
str(data_h$informal)
cor(as.numeric(data_h$informal),data_h$Salario,use = "complete.obs")
count(is.na(data_h$Salario))
is.na(data_h$Salario)
count(is.na(data_h$Salario)==TRUE)
sum(is.na(data_h$Salario)==TRUE)
sum(is.na(data_h$Salario)==FALSE)
4643+9780
sum(is.na(data_h$informal)==FALSE)
sum(is.na(data_h$informal)=="1")
sum(is.na(data_h$informal)==1)
sum(data_h$informal==1)
salario_missing<-sum(is.na(data_ponderada$Salario)=TRUE)
salario_missing<-sum(is.na(data_ponderada$Salario)==TRUE)
salario_missing
informales<- data_ponderada %>% filter(data_ponderada$informal==1)
informales_sin_salario<-sum(is.na(informales$Salario)==TRUE)
informales_sin_salario
informales<- data_ponderada %>% filter(data_ponderada$informal==1)
informales_sin_salario<-sum(is.na(informales$Salario)==TRUE)
porcentaje_missing_informales<-informales_sin_salario/salario_missing
informales<- data_ponderada %>% filter(data_ponderada$informal==1)
informales_sin_salario<-sum(is.na(informales$Salario)==TRUE)
porcentaje_missing_informales<-informales_sin_salario/salario_missing
porcentaje_missing_informales
nrow(informales_sin_salario)
informales_sin_salario
plot(data_ponderada$Salario,data_ponderada$Ingreso)
table(data_ponderada$Salario)
View(data_ponderada)
View(data_h)
data_h<-data_h %>% mutate(log_salario=log(Salario),
Edad2=Edad^2)
data_h<-data_h %>% mutate(log_salario=log(Ingreso),
Edad2=Edad^2)
hist(data_h$log_salario)
hist(data_h$Edad2)
plot(data_ponderada$Salario,data_ponderada$Ingreso)
data_ponderada <- data_ponderada %>% filter(Ingreso==0)
```
View(data_ponderada)
View(data_h)
stargazer:: stargazer(as.data.frame(data_h[,c("Ingreso","Salario","Edad","Horas_trabajadas")]), type="text")
library(stargaze)
library(stargazer)
install.packages("stargazer")
library(stargazer)
stargazer:: stargazer(as.data.frame(data_h[,c("Ingreso","Salario","Edad","Horas_trabajadas")]), type="text")
data_h1 <-data_h %>%
filter(Ingreso==0)
data_h1<-data_h1 %>% mutate(log_salario=log(Ingreso),
Edad2=Edad^2)
View(data_h1)
data_h1 <-data_h %>%
filter(Ingreso<=0)
data_h1<-data_h1 %>% mutate(log_salario=log(Ingreso),
Edad2=Edad^2)
View(data_h1)
data_h1 <-data_h %>%
filter(Ingreso>=0)
View(data_h1)
str(data_h$Ingreso)
data_h1 <-data_h %>%
filter(Ingreso=0.0)
data_h1 <-data_h %>%
filter(Ingreso==0.0)
data_h1 <-data_h %>%
filter(Ingreso!=0.0)
data_h1<-data_h1 %>% mutate(log_salario=log(Ingreso),
Edad2=Edad^2)
modelo1<-lm(data_h1$log_salario~data_h1$Edad+data_h1$Edad2)
stargazer(modelo1)
stargaze::stargazer(modelo1)
stargazer::stargazer(modelo1)
modelo1<-lm(data_h1$log_salario~data_h1$Edad+data_h1$Edad2)
stargazer::stargazer(modelo1,type = "text")
modelo1<-lm(log_salario ~  Edad + Edad2,
data=data_h1)
stargazer::stargazer(modelo1,type = "text")
data_h1<- mutate(ingreso_gorro=fitted(modelo1))
data_h1<- data_1 %>% mutate(ingreso_gorro=fitted(modelo1))
data_h1<- data_h1 %>% mutate(ingreso_gorro=fitted(modelo1))
ggplot(data_h1, aes(Salario=Salario))
data_h1<- data_h1 %>% mutate(ingreso_gorro=fitted(modelo1))
ggplot(data_h1,aes(x=Edad)) +
geom_point(aes(y=log_salario),color="blue") +
geom_line(aes(y=ingreso_gorro), color="red") +
labs(title = "Grafico",
x="Edad",
y="Ingreso")
data_h1<- data_h1 %>% mutate(ingreso_gorro=fitted(modelo1))
ggplot(data_h1,aes(x=Edad)) +
geom_point(aes(y=log_salario),color="blue") +
geom_line(aes(y=ingreso_gorro), color="red",show.legend = T) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso")
ggplot(data_h1,aes(x=Edad)) +
geom_point(aes(y=log_salario),color="blue") +
geom_line(aes(y=ingreso_gorro), color="red") +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso",
color="Asa")
data_h1<- data_h1 %>% mutate(ingreso_gorro=fitted(modelo1))
ggplot(data_h1,aes(x=Edad)) +
geom_point(aes(y=log_salario),color="Var1") +
geom_line(aes(y=ingreso_gorro), color="Var2") +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso",
color="Variables") +
scale_color_manual(name="Variables",
values = c("Var1"="blue","Var2"="red"),
labels=c("Var1"="Log Salario","Var2"="Predicci√≥n"))
ggplot(data_h1,aes(x=Edad)) +
geom_point(aes(y=log_salario),color="blue") +
geom_line(aes(y=ingreso_gorro), color="red") +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso",
) +
scale_color_manual(name="Variables",
values = c("blue","red"),
labels=c("log_salario","ingreso_gorro"))
ggplot(data_h1,aes(x=Edad)) +
geom_point(aes(y=log_salario),color="blue") +
geom_line(aes(y=ingreso_gorro), color="red") +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso",
) +
scale_color_manual(name="Variables",
values = c("blue","red"),
labels=c("log_salario","ingreso_gorro"))
ggplot(data_h1,aes(x=Edad)) +
geom_point(aes(y=log_salario),color="blue",legend(log_salario)) +
geom_line(aes(y=ingreso_gorro), color="red") +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso",
) +
scale_color_manual(name="Variables",
values = c("blue","red"),
labels=c("log_salario","ingreso_gorro"))
ggplot(data_h1,aes(x=Edad)) +
geom_point(aes(y=log_salario),color="blue",legend.label=log_salario) +
geom_line(aes(y=ingreso_gorro), color="red") +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso",
) +
scale_color_manual(name="Variables",
values = c("blue","red"),
labels=c("log_salario","ingreso_gorro"))
ggplot(data_h1,aes(x=Edad)) +
geom_point(aes(y=log_salario),color="blue",legend.label="log_salario") +
geom_line(aes(y=ingreso_gorro), color="red") +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso",
) +
scale_color_manual(name="Variables",
values = c("blue","red"),
labels=c("log_salario","ingreso_gorro"))
ggplot(data_h1,aes(x=Edad)) +
geom_point(aes(y=log_salario),color="blue",legend.label="log_salario") +
geom_line(aes(y=ingreso_gorro), color="red",legend.label="ingreso_gorro") +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso",
) +
scale_color_manual(name="Variables",
values = c("blue","red"),
labels=c("log_salario","ingreso_gorro"))
data_h1<- data_h1 %>% mutate(ingreso_gorro=fitted(modelo1))
ggplot(data_h1,aes(x=Edad)) +
geom_point(aes(y=log_salario),color="log_salario") +
geom_line(aes(y=ingreso_gorro), color"ingreso_gorro") +
data_h1<- data_h1 %>% mutate(ingreso_gorro=fitted(modelo1))
ggplot(data_h1,aes(x=Edad)) +
geom_point(aes(y=log_salario),color="log_salario") +
geom_line(aes(y=ingreso_gorro), color="ingreso_gorro") +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso",
) +
scale_color_manual(name="Variables",
values = c("blue","red"),
labels=c("log_salario","ingreso_gorro"))
data_h1<- data_h1 %>% mutate(ingreso_gorro=fitted(modelo1))
ggplot(data_h1,aes(x=Edad)) +
geom_point(aes(y=log_salario),color=log_salario) +
geom_line(aes(y=ingreso_gorro), color="red") +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso",
)
data_aux<-data_h1 %>%  pivot_longer(cols = Ingreso & ingreso_gorro,
names_to = "Predict",
values_to = "Valor")
data_aux<-data_h1 %>% select(Ingreso,ingreso_gorro,Edad)
View(data_aux)
data_aux<-data_aux %>%  pivot_longer(cols = Ingreso:ingreso_gorro,
names_to = "Predict",
values_to = "Valor")
View(data_aux)
ggplot(data_aux,aes(x=Edad)) +
geom_point(aes(y=log_salario),color=Predict) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso",
)
ggplot(data_aux,aes(x=Edad)) +
geom_point(aes(y=log_salario),color=data_aux$Predict) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso",
)
ggplot(data_aux,aes(x=Edad)) +
geom_point(aes(y=Valor),color=data_aux$Predict) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso",
)
ggplot(data_aux,aes(x=Edad)) +
geom_point(aes(y=Valor),color=data_aux$Predict) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso"
)
ggplot(data_aux,aes(x=Edad,fill=Predict)) +
geom_point(aes(y=Valor)) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso"
)
ggplot(data_aux,aes(x=Edad,fill=Predict)) +
geom_point(aes(y=Valor),color=Predict) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso"
)
ggplot(data_aux,aes(x=Edad,fill=Predict)) +
geom_point(aes(y=Valor),color=data_aux$Predict) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso"
)
ggplot(data_aux,aes(x=Edad,color=Predict)) +
geom_point(aes(y=Valor),color=data_aux$Predict) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso"
)
ggplot(data_aux,aes(x=Edad,color=Predict)) +
geom_point(aes(y=Valor)) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso"
)
data_h1<- data_h1 %>% mutate(ingreso_gorro=fitted(modelo1))
data_aux<-data_h1 %>% select(log_salario,ingreso_gorro,Edad)
data_aux<-data_aux %>%  pivot_longer(cols = log_salario:ingreso_gorro,
names_to = "Predict",
values_to = "Valor")
# ggplot(data_h1,aes(x=Edad)) +
#   geom_point(aes(y=log_salario),color="blue") +
#   geom_line(aes(y=ingreso_gorro), color="red") +
#   labs(title = "Ajuste del modelo a los datos de la muestra",
#        x="Edad",
#        y="Ingreso"
#        )
#
ggplot(data_aux,aes(x=Edad,color=Predict)) +
geom_point(aes(y=Valor)) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso"
)
data_h1<- data_h1 %>% mutate(log_salario_gorro=fitted(modelo1))
data_aux<-data_h1 %>% select(log_salario,log_salario_gorro,Edad)
data_aux<-data_aux %>%  pivot_longer(cols = log_salario:log_salario_gorro,
names_to = "Predict",
values_to = "Valor")
# ggplot(data_h1,aes(x=Edad)) +
#   geom_point(aes(y=log_salario),color="blue") +
#   geom_line(aes(y=ingreso_gorro), color="red") +
#   labs(title = "Ajuste del modelo a los datos de la muestra",
#        x="Edad",
#        y="Ingreso"
#        )
#
ggplot(data_aux,aes(x=Edad,color=Predict)) +
geom_point(aes(y=Valor)) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso"
)
data_h1<- data_h1 %>% mutate(log_ingreso_gorro=fitted(modelo1))
data_aux<-data_h1 %>% select(log_salario,log_ingreso_gorro,Edad)
data_aux<-data_aux %>%  pivot_longer(cols = log_salario:log_ingreso_gorro,
names_to = "Predict",
values_to = "Valor")
# ggplot(data_h1,aes(x=Edad)) +
#   geom_point(aes(y=log_salario),color="blue") +
#   geom_line(aes(y=ingreso_gorro), color="red") +
#   labs(title = "Ajuste del modelo a los datos de la muestra",
#        x="Edad",
#        y="Ingreso"
#        )
#
ggplot(data_aux,aes(x=Edad,color=Predict)) +
geom_point(aes(y=Valor)) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Log Ingreso"
)
ggplot(data_aux,aes(x=Edad,color=Predict)) +
geom_point(aes(y=Valor)) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Log Ingreso"
) +
theme_stata() +
scale_fill_stata()
library(ggthemes)
install.packages("ggthemes")
library(ggthemes)
ggplot(data_aux,aes(x=Edad,color=Predict)) +
geom_point(aes(y=Valor)) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Log Ingreso"
) +
theme_stata() +
scale_fill_stata()
data_h1<- data_h1 %>% mutate(ingreso_gorro=exp(log_ingreso_gorro))
data_aux<-data_h1 %>% select(Ingreso,ingreso_gorro,Edad)
data_aux<-data_aux %>%  pivot_longer(cols = Ingreso:ingreso_gorro,
names_to = "Predict",
values_to = "Valor")
ggplot(data_aux,aes(x=Edad,color=Predict)) +
geom_point(aes(y=Valor)) +
labs(title = "Ajuste del modelo a los datos de la muestra",
x="Edad",
y="Ingreso"
) +
theme_stata() +
scale_fill_stata()
stargazer(data_h1$ingreso_gorro,type = "text")
summary.table(data_h1$ingreso_gorro)
summary(data_h1$ingreso_gorro)
