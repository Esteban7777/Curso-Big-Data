# Limpieza de mayores de edad: Este chunk lo usamos solo como limpieza de datos
data <- data %>%
filter(age >18) %>%
rename(
Edad= age,
Estrato=estrato1,
Ingreso=ingtot,
Educacion=p6210,
Experiencia= p6426,
Salario=p6500,
Sexo=sex,
Horas_trabajadas=totalHoursWorked
)  %>%
mutate(
across(c(cuentaPropia,Estrato,formal,informal,maxEducLevel,oficio,Educacion,Sexo),as.character)
)
data <- data %>%
rename(
Edad= age,
Estrato=estrato1,
Ingreso=ingtot,
Educacion=p6210,
Experiencia= p6426,
Salario=p6500,
Sexo=sex,
Horas_trabajadas=totalHoursWorked
)  %>%
mutate(
across(c(cuentaPropia,Estrato,formal,informal,maxEducLevel,oficio,Educacion,Sexo),as.character)
)
table<-my_html %>% html_table()
tables_list[[i]] <- table
for (i in 1:10){
bucle_url<-paste0(url_base, i, ".html")
my_html=read_html(bucle_url)
table<-my_html %>% html_table()
tables_list[[i]] <- table
}
data<-dplyr::bind_rows(tables_list)
Tiempo_ejecucion
data <- data %>%
filter(age >18)
data <- data %>%
rename(
Edad= age,
Estrato=estrato1,
Ingreso=ingtot,
Educacion=p6210,
Experiencia= p6426,
Salario=p6500,
Sexo=sex,
Horas_trabajadas=totalHoursWorked
)  %>%
mutate(
across(c(cuentaPropia,Estrato,formal,informal,maxEducLevel,oficio,Educacion,Sexo),as.character)
)
data_h <- data %>%
select(Edad,cuentaPropia,Estrato,fex_c,fex_dpto,formal,informal,Ingreso,maxEducLevel,oficio,Educacion,Experiencia,Salario,Sexo,Horas_trabajadas)
str(data_h)
character_cols <- data_h %>%
select(where(is.character))
character_plots <- map(character_cols, ~ ggplot(df, aes(x = .)) +
geom_bar() +
labs(title = paste("Bar Plot of", .)) +
theme_minimal())
character_cols <- data_h %>%
select(where(is.character))
character_plots <- map(character_cols, ~ ggplot(data_h, aes(x = .)) +
geom_bar() +
labs(title = paste("Bar Plot of", .)) +
theme_minimal())
library(gridExtra)
character_grid <- grid.arrange(grobs = character_plots, ncol = 2)
character_cols <- data_h %>%
select(where(is.character))
character_plots <-  map2(character_cols, names(character_cols), ~ ggplot(datah, aes(x = .)) +
geom_bar() +
labs(title = paste("Bar Plot of", .)) +
theme_minimal())
character_cols <- data_h %>%
select(where(is.character))
character_plots <-  map2(character_cols, names(character_cols), ~ ggplot(data_h, aes(x = .)) +
geom_bar() +
labs(title = paste("Bar Plot of", .)) +
theme_minimal())
character_grid <- grid.arrange(grobs = character_plots, ncol = 2)
character_cols <- data_h %>%
select(where(is.character))
character_plots <-  map(character_cols, ~ ggplot(data_h, aes(x = .)) +
geom_bar() +
labs(title = paste("Bar Plot of", names(.))) +
theme_minimal())
character_grid <- grid.arrange(grobs = character_plots, ncol = 2)
character_cols <- data_h %>%
select(where(is.character))
# Create individual plots for character columns
character_plots <- map(character_cols, ~ ggplot(data_h, aes(x = .)) +
geom_bar() +
labs(title = paste("Bar Plot of", names(.))) +
theme_minimal())
# Arrange character plots in a grid
character_grid <- grid.arrange(grobs = character_plots, ncol = 2)
character_cols <- data_h %>%
select(where(is.character))
# Create individual plots for character columns
map(character_cols, ~ ggplot(data_h, aes(x = .)) +
geom_bar() +
labs(title = paste("Bar Plot of", names(.))) +
theme_minimal() +
theme(plot.title = element_text(color = "white")))
# Arrange character plots in a grid
character_grid <- grid.arrange(grobs = character_plots, ncol = 2)
# Create individual plots for character columns
map(character_cols, ~ ggplot(data_h, aes(x = .)) +
geom_bar() +
labs(title = paste("Bar Plot of", names(.))) +
theme_minimal() +
theme(plot.title = element_text(color = "Blank")))
# Create individual plots for character columns
map(character_cols, ~ ggplot(data_h, aes(x = .)) +
geom_bar() +
labs(title = paste("Bar Plot of", names(.))) +
theme_minimal() +
theme(plot.title = element_text(color = "Blanck")))
character_cols <- data_h %>%
select(where(is.character))
# Create individual plots for character columns
haracter_plots <- map2(character_cols, names(character_cols), ~ ggplot(data_h, aes(x = .x)) +
geom_bar() +
ggtitle(paste("Bar Plot of", .y)) +
theme_minimal() +
theme(plot.title = element_text(color = "white")))
# Arrange character plots in a grid
character_grid <- grid.arrange(grobs = character_plots, ncol = 2)
character_cols <- data_h %>%
select(where(is.character))
# Create individual plots for character columns
character_plots <-map2(character_cols, names(character_cols), ~ ggplot(data_h, aes(x = .x)) +
geom_bar() +
ggtitle("") +  # Set the title to blank
theme_minimal() +
theme(plot.title = element_text(color = "white", hjust = 0)))  # Set title text color to white
# Arrange character plots in a grid
character_grid <- grid.arrange(grobs = character_plots, ncol = 2)
character_cols <- data_h %>%
select(where(is.character))
# Create individual plots for character columns
character_plots <-map2(character_cols, names(character_cols), ~ ggplot(data_h, aes(x = .x)) +
geom_bar() +
ggtitle("") +  # Set the title to blank
theme_minimal() +
theme(plot.title = element_text(color = "black", hjust = 0)))  # Set title text color to white
# Arrange character plots in a grid
character_grid <- grid.arrange(grobs = character_plots, ncol = 2)
character_cols <- data_h %>%
select(where(is.character))
# Create individual plots for character columns
character_plots <- map2(character_cols, names(character_cols), ~ ggplot(data_h, aes(x = .x)) +
geom_bar() +
ggtitle(paste("Bar Plot of", .y)) +  # Set the title to the column name
theme_minimal() +
theme(plot.title = element_text(color = "black", hjust = 0)))
# Arrange character plots in a grid
character_grid <- grid.arrange(grobs = character_plots, ncol = 2)
character_cols <- data_h %>%
select(where(is.character))
character_plots <- map2(character_cols, names(character_cols), ~ ggplot(data_h, aes(x = .x)) +
geom_bar() +
ggtitle(paste("Distribucion", .y)) +
theme_minimal() +
theme(plot.title = element_text(color = "black", hjust = 0)))
character_grid <- grid.arrange(grobs = character_plots, ncol = 2)
numeric_cols <- data_h %>%
select(where(is.numeric))
numeric_plots <- map2(numeric_cols, names(numeric_cols), ~ ggplot(data_h, aes(x = 1, y = .x)) +
geom_boxplot() +
ggtitle(paste("Box Plot of", .y)) +  # Set the title to the column name
theme_minimal() +
theme(plot.title = element_text(color = "black", hjust = 0)))  # Set title text color to black
numeric_grid <- grid.arrange(grobs = numeric_plots, ncol = 2)
numeric_cols <- data_h %>%
select(where(is.numeric))
numeric_plots <- map2(numeric_cols, names(numeric_cols), ~ ggplot(data_h, aes(x = .x)) +
geom_histogram(fill = "skyblue", color = "black", bins = 10) +
ggtitle(paste("Histogram of", .y)) +  # Set the title to the column name
theme_minimal() +
theme(plot.title = element_text(color = "black", hjust = 0)))
numeric_grid <- grid.arrange(grobs = numeric_plots, ncol = 2)
data_h <- data %>%
select(Edad,cuentaPropia,Estrato,formal,informal,Ingreso,maxEducLevel,oficio,Educacion,Experiencia,Salario,Sexo,Horas_trabajadas)
numeric_cols <- data_h %>%
select(where(is.numeric))
numeric_plots <- map2(numeric_cols, names(numeric_cols), ~ ggplot(data_h, aes(x = .x)) +
geom_histogram(fill = "skyblue", color = "black", bins = 10) +
ggtitle(paste("Histogram of", .y)) +  # Set the title to the column name
theme_minimal() +
theme(plot.title = element_text(color = "black", hjust = 0)))
numeric_grid <- grid.arrange(grobs = numeric_plots, ncol = 2)
numeric_cols <- data_h %>%
select(where(is.numeric))
numeric_plots <- map2(numeric_cols, names(numeric_cols), ~ ggplot(data_h, aes(x = .x)) +
geom_histogram(fill = "skyblue", color = "black", bins = 10) +
ggtitle(paste("Distribucion of", .y)) +  # Set the title to the column name
theme_minimal() +
theme(plot.title = element_text(color = "black", hjust = 0)))
numeric_grid <- grid.arrange(grobs = numeric_plots, ncol = 2)
library(gridExtra)
library(rvest)
t1<-Sys.time()
library(rvest)
library(tidyverse)
url_base<-my_url <- "https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_"
tables_list <- list()
for (i in 1:10){
bucle_url<-paste0(url_base, i, ".html")  # Bucle
my_html=read_html(bucle_url)
table<-my_html %>% html_table()
tables_list[[i]] <- table
}
data<-dplyr::bind_rows(tables_list)  # Dataframe
t2<-Sys.time()
Tiempo_ejecucion<-t2-t1
Tiempo_ejecucion
url_base<-my_url <- "https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_"
tables_list <- list()
for (i in 1:10){
bucle_url<-paste0(url_base, i, ".html")  # Bucle
my_html=read_html(bucle_url)
table<-my_html %>% html_table()
tables_list[[i]] <- table
}
View(data_h)
View(data_h)
data<-dplyr::bind_rows(tables_list)  # Dataframe
t2<-Sys.time()
Tiempo_ejecucion<-t2-t1
Tiempo_ejecucion
base_no_ponderada<-length(data$fex_c)
universo_representado<-sum(data$fex_c)
data<-  data %>%
mutate(data, peso=fex_c/universo_representado) %>%
mutate(data,fponderacion=peso*base_no_ponderada)
base_ponderada<-sum(data$fponderacion)
unidades_muestrales_fex<-length(unique(data$fex_c))
unidades_muestrales_fpon<-length(unique(data$fponderacion))
tabla1<-t(tibble(base_no_ponderada,base_ponderada,unidades_muestrales_fex,unidades_muestrales_fpon,universo_representado))
tabla1
data_ponderada<-uncount(data,weights = round(data$fponderacion))
base_ponderada<-length(data_ponderada$directorio)
base_ponderada
base_no_ponderada
View(data)
data %>%
group_by(p6240) %>%
summarise(n())
data %>%
filter(p6240==1)
data <-data %>%
filter(p6240==1)
data_h <- data %>%
select(Edad,cuentaPropia,Estrato,formal,informal,Ingreso,maxEducLevel,oficio,Educacion,Experiencia,Salario,Sexo,Horas_trabajadas)
# Limpieza de mayores de edad: Este chunk lo usamos solo como limpieza de datos
data <- data %>%
filter(Edad >18 & dsi !="1")
# Limpieza de mayores de edad: Este chunk lo usamos solo como limpieza de datos
data <- data %>%
rename(
Edad= age,
Estrato=estrato1,
Ingreso=ingtot,
Educacion=p6210,
Experiencia= p6426,
Salario=p6500,
Sexo=sex,
Horas_trabajadas=totalHoursWorked
)  %>%
mutate(
across(c(cuentaPropia,Estrato,formal,informal,maxEducLevel,oficio,Educacion,Sexo),as.character)
)
### Filtro por población economica activa
data <- data %>%
filter(Edad >18 & dsi !="1")
data <-data %>%
filter(p6240==1)
data_h <- data %>%
select(Edad,cuentaPropia,Estrato,formal,informal,Ingreso,maxEducLevel,oficio,Educacion,Experiencia,Salario,Sexo,Horas_trabajadas)
character_cols <- data_h %>%
select(where(is.character))
character_plots <- map2(character_cols, names(character_cols), ~ ggplot(data_h, aes(x = .x)) +
geom_bar() +
ggtitle(paste("Distribucion", .y)) +
theme_minimal() +
theme(plot.title = element_text(color = "black", hjust = 0)))
character_grid <- grid.arrange(grobs = character_plots, ncol = 2)
numeric_cols <- data_h %>%
select(where(is.numeric))
numeric_plots <- map2(numeric_cols, names(numeric_cols), ~ ggplot(data_h, aes(x = .x)) +
geom_histogram(fill = "skyblue", color = "black", bins = 10) +
ggtitle(paste("Distribucion of", .y)) +  # Set the title to the column name
theme_minimal() +
theme(plot.title = element_text(color = "black", hjust = 0)))
numeric_grid <- grid.arrange(grobs = numeric_plots, ncol = 2)
data %>%
group_by(Ingreso)
data %>%
group_by(Ingreso) %>%
summarise(n())
segun \cite(smith2010)
segun \cite{smith2010}
library(gridExtra)
t1<-Sys.time()
library(rvest)
library(tidyverse)
base_no_ponderada<-length(data$fex_c)
universo_representado<-sum(data$fex_c)
data<-  data %>%
mutate(data, peso=fex_c/universo_representado) %>%
mutate(data,fponderacion=peso*base_no_ponderada)
base_ponderada<-sum(data$fponderacion)
unidades_muestrales_fex<-length(unique(data$fex_c))
unidades_muestrales_fpon<-length(unique(data$fponderacion))
tabla1<-t(tibble(base_no_ponderada,base_ponderada,unidades_muestrales_fex,unidades_muestrales_fpon,universo_representado))
tabla1
data_ponderada<-uncount(data,weights = round(data$fponderacion))
base_ponderada<-length(data_ponderada$directorio)
base_ponderada
base_no_ponderada
url_base<-my_url <- "https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_"
tables_list <- list()
for (i in 1:10){
bucle_url<-paste0(url_base, i, ".html")
my_html=read_html(bucle_url)
table<-my_html %>% html_table()
tables_list[[i]] <- table}
data<-dplyr::bind_rows(tables_list)
t2<-Sys.time()
Tiempo_ejecucion<-t2-t1
Tiempo_ejecucion
# Limpieza de mayores de edad: Este chunk lo usamos solo como limpieza de datos
## Falta filtrar solo por personas
data <- data %>%
rename(
Edad= age,
Estrato=estrato1,
Ingreso=ingtot,
Educacion=p6210,
Experiencia= p6426,
Salario=p6500,
Sexo=sex,
Horas_trabajadas=totalHoursWorked
)  %>%
mutate(
across(c(cuentaPropia,Estrato,formal,informal,maxEducLevel,oficio,Educacion,Sexo),as.character)
)
### Filtro por población economica activa
data <- data %>%
filter(Edad >18 & dsi !="1")
data <-data %>%
filter(p6240==1)
data_h <- data %>%
select(Edad,cuentaPropia,Estrato,formal,informal,Ingreso,maxEducLevel,oficio,Educacion,Experiencia,Salario,Sexo,Horas_trabajadas)
datah$log_ingreso <- log(datah$ingreso)
data_h$log_ingreso <- log(datah$ingreso)
data_h$log_ingreso <- log(data_h$ingreso)
data_h$log_ingreso <- log(data_h$Ingreso)
par(mfrow=c(1,2))
hist(datah$ingreso, main="Histograma de ingreso", xlab="Ingreso", ylab="Frecuencia")
hist(datah$log_ingreso, main="Histograma de logaritmo del ingreso", xlab="Log(Ingreso)", ylab="Frecuencia")
data_h$log_ingreso <- log(data_h$Ingreso)
par(mfrow=c(1,2))
hist(data_h$ingreso, main="Histograma de ingreso", xlab="Ingreso", ylab="Frecuencia")
data_h$log_ingreso <- log(data_h$Ingreso)
par(mfrow=c(1,2))
hist(data_h$Ingreso, main="Histograma de ingreso", xlab="Ingreso", ylab="Frecuencia")
hist(data_h$log_ingreso, main="Histograma de logaritmo del ingreso", xlab="Log(Ingreso)", ylab="Frecuencia")
stargazer:: stargazer(as.data.frame(data_h[,'Ingreso']), type="text")
install.packages("stargazer")
stargazer:: stargazer(as.data.frame(data_h[,'Ingreso']), type="text")
stargazer:: stargazer(as.data.frame(data_h[,'Ingreso']), type="html")
stargazer:: stargazer(as.data.frame(data_h[,'Ingreso']), type="text")
sink("output.md")
sink("output.md")
stargazer:: stargazer(as.data.frame(data_h[,'Ingreso']), type="text")
sink()
stargazer:: stargazer(as.data.frame(data_h[,'Ingreso']), type="text")
sink("output.md")
stargazer:: stargazer(as.data.frame(data_h[,'Ingreso']), type="text")
stargazer:: stargazer(as.data.frame(data_h[,'Ingreso']), type="text")
summary(data_h$Ingreso)
summary(data_h$Ingreso)
stargazer:: stargazer(as.data.frame(data_h[,'Ingreso']), type="text")
data_h$log_salario <- log(data_h$Salario)
par(mfrow=c(1,2))
hist(data_h$Ingreso, main="Histograma de ingreso", xlab="Ingreso", ylab="Frecuencia")
hist(data_h$log_ingreso, main="Histograma de logaritmo del ingreso", xlab="Log(Ingreso)", ylab="Frecuencia")
stargazer:: stargazer(as.data.frame(data_h[,'Ingreso']), type="text")
data_h
modelS<-lm(log_salario ~  Sexo,
data=data_h)
str(data_h)
data_h$Sexo <-as.numeric(data_h$Sexo)
modelS<-lm(log_salario ~  Sexo,
data=data_h)
modelS<-lm(log_salario ~  Sexo,data=data_h)
data_h$Salario <- na.aggregate(data_h$Salario, FUN = median)
install.packages("zoo")
data_h$Salario <- na.aggregate(data_h$Salario, FUN = median)
library(gridExtra)
library(rvest)
library(tidyverse)
library(zoo)
library(ggthemes)
library(boot)
data_h$Salario <- na.aggregate(data_h$Salario, FUN = median)
data_h <- data_ponderada %>%
select(Edad,cuentaPropia,Estrato,formal,informal,maxEducLevel,oficio,Educacion,Experiencia,Salario,Sexo,Horas_trabajadas,directorio)
data_h <- data_ponderada %>%
select(Edad,cuentaPropia,Estrato,formal,informal,maxEducLevel,oficio,Educacion,Experiencia,Salario,Sexo,Horas_trabajadas,directorio)
data_h = data_h %>%
group_by(directorio) %>%
mutate(mean_salario = mean(Salario, na.rm=T))
data_h = data_h %>%
mutate(Salario2 = ifelse(test = is.na(Salario)==T,
yes = mean_salario,
no = Salario))
table(is.na(data_h$Salario2))
data_h <-data_h %>%
filter(Salario2>0)
table(is.na(data_h$Salario2))
data_h<-data_h %>% mutate(log_salario=log(Salario2),
Edad2=Edad^2
)
par(mfrow=c(1,2))
hist(data_h$Salario2, main="Distribución del salario", xlab="Salario", ylab="Frecuencia")
hist(data_h$log_salario, main="Histograma de logaritmo del Salario", xlab="Log(Salario)", ylab="Frecuencia")
modelS<-lm(log_salario ~  Sexo,data=data_h)
stargazer::stargazer(modelS,type = "text")
data_h <- data_ponderada %>%
select(Edad,cuentaPropia,Estrato,formal,informal,maxEducLevel,oficio,Educacion,Experiencia,Salario,Sexo,Horas_trabajadas,directorio)
data_h <- data_h %>%
mutate(Sexo = ifelse(Sexo == 1, 0, ifelse(Sexo == 0, 1, Sexo)))
modelS<-lm(log_salario ~  Sexo,data=data_h)
# Limpieza de mayores de edad: Este chunk lo usamos solo como limpieza de datos
## Falta filtrar solo por personas
data_ponderada <- data_ponderada %>%
rename(
Edad= age,
Estrato=estrato1,
Ingreso=ingtot,
Educacion=p6210,
Experiencia= p6426,
Salario=y_total_m,
Sexo=sex,
Horas_trabajadas=totalHoursWorked
)  %>%
mutate(
across(c(cuentaPropia,Estrato,formal,informal,maxEducLevel,oficio,Educacion,Sexo),as.character)
)
data_h <- data_ponderada %>%
select(Edad,cuentaPropia,Estrato,formal,informal,maxEducLevel,oficio,Educacion,Experiencia,Salario,Sexo,Horas_trabajadas,directorio)
data_h <- data_h %>%
mutate(Sexo = ifelse(Sexo == 1, 0, ifelse(Sexo == 0, 1, Sexo)))
data_h = data_h %>%
group_by(directorio) %>%
mutate(mean_salario = mean(Salario, na.rm=T))
data_h = data_h %>%
mutate(Salario2 = ifelse(test = is.na(Salario)==T,
yes = mean_salario,
no = Salario))
table(is.na(data_h$Salario2))
data_h <-data_h %>%
filter(Salario2>0)
table(is.na(data_h$Salario2))
data_h<-data_h %>% mutate(log_salario=log(Salario2),
Edad2=Edad^2
)
par(mfrow=c(1,2))
hist(data_h$Salario2, main="Distribución del salario", xlab="Salario", ylab="Frecuencia")
hist(data_h$log_salario, main="Histograma de logaritmo del Salario", xlab="Log(Salario)", ylab="Frecuencia")
qualitative_factor_vars <- data_h %>%
select(where(function(x) is.factor(x) || is.character(x)))
plot_proportion <- function(column, col_name) {
proportion <- prop.table(table(column)) * 100
barplot(proportion, main = col_name, ylab = "Proporción (%)", col = "skyblue", ylim = c(0, 100))
text(x = 1:length(proportion), y = proportion,
label = paste0(round(proportion, 1), "%"), pos = 3, cex = 0.8, col = "black")
}
num_vars <- ncol(qualitative_factor_vars)
num_rows <- ceiling(sqrt(num_vars))
num_cols <- ceiling(num_vars / num_rows)
par(mfrow = c(num_rows, num_cols), mar = c(5, 5, 2, 2))
walk2(qualitative_factor_vars, names(qualitative_factor_vars), plot_proportion)
quantitative_vars <- data_h %>%
select(where(is.numeric))
plot_histogram <- function(column, col_name) {
hist(column, main = col_name, xlab = col_name, ylab = "Frecuencia", col = "skyblue")
}
num_vars <- ncol(quantitative_vars)
num_rows <- ceiling(sqrt(num_vars))
num_cols <- ceiling(num_vars / num_rows)
par(mfrow = c(num_rows, num_cols), mar = c(5, 5, 2, 2))
walk2(quantitative_vars, names(quantitative_vars), plot_histogram)
options(repr.plot.width = 20, repr.plot.height = 10)
qualitative_vars <- data_h %>% select(where(is.factor) | where(is.character))
num_cols <- 4
num_rows <- ceiling(ncol(qualitative_vars) / num_cols)
par(mfrow = c(num_rows, num_cols))
for (col in colnames(qualitative_vars)) {
suppressWarnings(boxplot(log_salario ~ data_h[[col]], data = data_h, main = col, xlab = col, ylab = "log_salario"))
}
modelS<-lm(log_salario ~  Sexo,data=data_h)
stargazer::stargazer(modelS,type = "text")
